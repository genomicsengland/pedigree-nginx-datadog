 
load_module modules/ngx_http_opentracing_module.so;

daemon off;

events { worker_connections 1024; }


include /config/env.txt;

http {
    opentracing on;
    opentracing_tag http_user_agent $http_user_agent;
    opentracing_trace_locations off;

    #opentracing_load_tracer /usr/local/lib/libdd_opentracing_plugin.so /config/dd-config.json;
    opentracing_load_tracer /usr/local/lib64/libdd_opentracing.so /config/dd-config.json;

    default_type  application/octet-stream;
    include       /etc/nginx/mime.types;

    log_format json_custom escape=json
    '{'
	      '"http.version":"$request",'
	      '"http.status_code":$status,'
	      '"http.method":"$request_method",'
	      '"http.referer":"$http_referer",'
	      '"http.useragent":"$http_user_agent",'
	      '"time_local":"$time_local",'
	      '"remote_addr":"$remote_addr",'
	      '"remote_user":"$remote_user",'
	      '"body_bytes_sent":"$body_bytes_sent",'
	      '"request_time":$request_time,'
	      '"response_content_type":"$sent_http_content_type",'
	      '"X-Forwarded-For":"$proxy_add_x_forwarded_for",'
	      '"env":"build",'
	      '"service":"pedigree-nginx"'
    '}';

    access_log /var/log/nginx/access.log json_custom;

    sendfile on;
    server_tokens off;
    server {
        root /usr/share/nginx/html;
        server_name localhost;
	      listen 8080;

        location / {
          
          opentracing_operation_name "$request_method $uri";
          opentracing_tag "resource.name" "/";
          opentracing_propagate_context;

	        add_header 'Access-Control-Allow_Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET,HEAD,OPTIONS';

          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' '*' always;
              add_header 'Access-Control-Allow-Headers' Access-Control-Allow-Origin,Authorization,Content-Type,X-Prototype-Version,X-Requested-With,CORRELATION_ID' always;
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
          }

          add_header X-Content-Type-Options nosniff;
          add_header X-Frame-Options DENY;
          add_header x-xss-protection "1; mode=block" always;
          add_header 'Expires' 'Tue, 03 Jul 2001 06:00:00 GMT';
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, max-age=0';
          add_header 'Pragma' 'no-cache';
          add_header Last-Modified $date_gmt;
	  add_header 'Server' 'sith';
        }

        location /health {
          opentracing_operation_name "$request_method $uri";
          opentracing_tag "resource.name" "/health";
          opentracing_propagate_context;
          
	        add_header Content-Type text/plain;
          return 200 "Healthy\n";
        }

        location /nginx_status {
            # Choose your status module
            opentracing_operation_name "$request_method $uri";
            opentracing_tag "resource.name" "/nginx_status";
            opentracing_propagate_context;
            # freely available with open source NGINX
            stub_status;

          }
    }
}
